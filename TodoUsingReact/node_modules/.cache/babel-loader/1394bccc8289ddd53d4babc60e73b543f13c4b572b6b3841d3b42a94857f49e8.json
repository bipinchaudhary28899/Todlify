{"ast":null,"code":"var _jsxFileName = \"/Users/bipinchaudhary/Projects/todolistApp/last todo list/Todo/TodoUsingReact/src/Components/TodoList/todoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoCard from \"../TodoCard/todoCard\";\nimport \"./todoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  handleonclickp,\n  handleondelete,\n  parteditonclick\n}) => {\n  _s();\n  // Color variables\n  //const [todolist, settodolist] = useState(todos);\n  // const backgroundColor1 = \"#c3cbd6\";\n  const textColor1 = \"white\";\n  //console.log(todos);\n\n  const update = function (todo) {\n    // const result = await fetch(\"http://localhost:3001/to-do-app/{todo._id}\", {\n    //   method: \"PUT\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\", // Set content type to JSON\n    //     // Additional headers if needed\n    //   },\n    //   body: JSON.stringify(todo), // Convert data to JSON string\n    // });\n    // const resultget = await fetch(\"http://localhost:3001/to-do-app\");\n    // const result_json = await resultget.json();\n    const indexToUpdate = todos.findIndex(obj => {\n      return obj._id === todo._id;\n    });\n    if (indexToUpdate !== -1) {\n      // Update the value of the desired property within that object\n      const updatedJsonData = [...todos]; // Create a shallow copy of the array\n      updatedJsonData[indexToUpdate] = {\n        ...updatedJsonData[indexToUpdate],\n        // Copy the original object\n        ...todo // Update the value of the desired property\n      };\n\n      // Return the updated JSON object\n\n      //settodolist(() => updatedJsonData);\n    }\n  };\n\n  // Group todos by category\n  const todosByCategory = todos.reduce((acc, todo) => {\n    let category;\n    if (!todo.category) {\n      category = \"others\";\n      if (!acc[category]) {\n        acc[\"others\"] = [];\n      }\n    } else if (!acc[todo.category]) {\n      acc[todo.category] = [];\n    }\n    category ? acc[category].push(todo) : acc[todo.category].push(todo);\n    return acc;\n  }, {});\n  // Get today's and tomorrow's date\n  const today = new Date();\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Filter todos for today and tomorrow\n  const todosToday = todos.filter(todo => {\n    const dueDate = new Date(todo.end_date);\n    return dueDate.toDateString() === today.toDateString();\n  });\n  const todosTomorrow = todos.filter(todo => {\n    const dueDate = new Date(todo.end_date);\n    return dueDate.toDateString() === tomorrow.toDateString();\n  });\n\n  // Paginate todos for Today's Todos\n  const [currentPageToday, setCurrentPageToday] = useState(1);\n  const todosPerPageToday = 3;\n  const indexOfLastTodoToday = currentPageToday * todosPerPageToday;\n  const indexOfFirstTodoToday = indexOfLastTodoToday - todosPerPageToday;\n  const currentTodosToday = todosToday.slice(indexOfFirstTodoToday, indexOfLastTodoToday);\n\n  // Paginate todos for Tomorrow's Todos\n  const [currentPageTomorrow, setCurrentPageTomorrow] = useState(1);\n  const todosPerPageTomorrow = 3;\n  const indexOfLastTodoTomorrow = currentPageTomorrow * todosPerPageTomorrow;\n  const indexOfFirstTodoTomorrow = indexOfLastTodoTomorrow - todosPerPageTomorrow;\n  const currentTodosTomorrow = todosTomorrow.slice(indexOfFirstTodoTomorrow, indexOfLastTodoTomorrow);\n\n  // Paginate todos for Todos by Category\n  const [currentPageCategory, setCurrentPageCategory] = useState({});\n  const todosPerPageCategory = 3;\n  const currentTodosByCategory = Object.keys(todosByCategory).reduce((acc, category) => {\n    const currentPage = currentPageCategory[category] || 1;\n    const indexOfLastTodoCategory = currentPage * todosPerPageCategory;\n    const indexOfFirstTodoCategory = indexOfLastTodoCategory - todosPerPageCategory;\n    acc[category] = todosByCategory[category].slice(indexOfFirstTodoCategory, indexOfLastTodoCategory);\n    return acc;\n  }, {});\n\n  // Change page for Today's Todos\n  const paginateToday = pageNumber => setCurrentPageToday(pageNumber);\n\n  // Change page for Tomorrow's Todos\n  const paginateTomorrow = pageNumber => setCurrentPageTomorrow(pageNumber);\n\n  // Change page for Todos by Category\n  const paginateCategory = (pageNumber, category) => {\n    setCurrentPageCategory(prevState => ({\n      ...prevState,\n      [category]: pageNumber\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"transparent\",\n      color: \"textColor1\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today's Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), currentTodosToday.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoCard, {\n          todo: todo,\n          update: update,\n          handleonclickp: handleonclickp,\n          handleondelete: handleondelete,\n          parteditonclick: parteditonclick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: Array.from({\n            length: Math.ceil(todosToday.length / todosPerPageToday)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `page-item ${currentPageToday === index + 1 ? \"active\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-link\",\n              onClick: () => paginateToday(index + 1),\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tomorrow's Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), currentTodosTomorrow.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoCard, {\n          todo: todo,\n          update: update,\n          handleonclickp: handleonclickp,\n          handleondelete: handleondelete,\n          parteditonclick: parteditonclick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: Array.from({\n            length: Math.ceil(todosTomorrow.length / todosPerPageTomorrow)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `page-item ${currentPageTomorrow === index + 1 ? \"active\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-link\",\n              onClick: () => paginateTomorrow(index + 1),\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todos by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(currentTodosByCategory).map(([category, todos]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoCard, {\n              todo: todo,\n              update: update,\n              handleonclickp: handleonclickp,\n              handleondelete: handleondelete,\n              parteditonclick: parteditonclick\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination\",\n            children: Array.from({\n              length: Math.ceil(todosByCategory[category].length / todosPerPageCategory)\n            }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${currentPageCategory[category] === index + 1 ? \"active\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"page-link\",\n                onClick: () => paginateCategory(index + 1, category),\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"ZV3ZDoiH4xrwlWwoJD8CjfqEWuo=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoCard","jsxDEV","_jsxDEV","TodoList","todos","handleonclickp","handleondelete","parteditonclick","_s","textColor1","update","todo","indexToUpdate","findIndex","obj","_id","updatedJsonData","todosByCategory","reduce","acc","category","push","today","Date","tomorrow","setDate","getDate","todosToday","filter","dueDate","end_date","toDateString","todosTomorrow","currentPageToday","setCurrentPageToday","todosPerPageToday","indexOfLastTodoToday","indexOfFirstTodoToday","currentTodosToday","slice","currentPageTomorrow","setCurrentPageTomorrow","todosPerPageTomorrow","indexOfLastTodoTomorrow","indexOfFirstTodoTomorrow","currentTodosTomorrow","currentPageCategory","setCurrentPageCategory","todosPerPageCategory","currentTodosByCategory","Object","keys","currentPage","indexOfLastTodoCategory","indexOfFirstTodoCategory","paginateToday","pageNumber","paginateTomorrow","paginateCategory","prevState","style","backgroundColor","color","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Array","from","length","Math","ceil","_","onClick","entries","_c","$RefreshReg$"],"sources":["/Users/bipinchaudhary/Projects/todolistApp/last todo list/Todo/TodoUsingReact/src/Components/TodoList/todoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoCard from \"../TodoCard/todoCard\";\nimport \"./todoList.css\";\n\nconst TodoList = ({\n  todos,\n  handleonclickp,\n  handleondelete,\n  parteditonclick,\n}) => {\n  // Color variables\n  //const [todolist, settodolist] = useState(todos);\n  // const backgroundColor1 = \"#c3cbd6\";\n   const textColor1 = \"white\";\n  //console.log(todos);\n\n  const update = function (todo) {\n    // const result = await fetch(\"http://localhost:3001/to-do-app/{todo._id}\", {\n    //   method: \"PUT\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\", // Set content type to JSON\n    //     // Additional headers if needed\n    //   },\n    //   body: JSON.stringify(todo), // Convert data to JSON string\n    // });\n    // const resultget = await fetch(\"http://localhost:3001/to-do-app\");\n    // const result_json = await resultget.json();\n    const indexToUpdate = todos.findIndex((obj) => {\n      return obj._id === todo._id;\n    });\n    if (indexToUpdate !== -1) {\n      // Update the value of the desired property within that object\n      const updatedJsonData = [...todos]; // Create a shallow copy of the array\n      updatedJsonData[indexToUpdate] = {\n        ...updatedJsonData[indexToUpdate], // Copy the original object\n        ...todo, // Update the value of the desired property\n      };\n\n      // Return the updated JSON object\n\n      //settodolist(() => updatedJsonData);\n    }\n  };\n\n  // Group todos by category\n  const todosByCategory = todos.reduce((acc, todo) => {\n    let category;\n    if (!todo.category) {\n      category = \"others\";\n      if (!acc[category]) {\n        acc[\"others\"] = [];\n      }\n    } else if (!acc[todo.category]) {\n      acc[todo.category] = [];\n    }\n    category ? acc[category].push(todo) : acc[todo.category].push(todo);\n    return acc;\n  }, {});\n  // Get today's and tomorrow's date\n  const today = new Date();\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Filter todos for today and tomorrow\n  const todosToday = todos.filter((todo) => {\n    const dueDate = new Date(todo.end_date);\n    return dueDate.toDateString() === today.toDateString();\n  });\n\n  const todosTomorrow = todos.filter((todo) => {\n    const dueDate = new Date(todo.end_date);\n    return dueDate.toDateString() === tomorrow.toDateString();\n  });\n\n  // Paginate todos for Today's Todos\n  const [currentPageToday, setCurrentPageToday] = useState(1);\n  const todosPerPageToday = 3;\n\n  const indexOfLastTodoToday = currentPageToday * todosPerPageToday;\n  const indexOfFirstTodoToday = indexOfLastTodoToday - todosPerPageToday;\n  const currentTodosToday = todosToday.slice(\n    indexOfFirstTodoToday,\n    indexOfLastTodoToday\n  );\n\n  // Paginate todos for Tomorrow's Todos\n  const [currentPageTomorrow, setCurrentPageTomorrow] = useState(1);\n  const todosPerPageTomorrow = 3;\n\n  const indexOfLastTodoTomorrow = currentPageTomorrow * todosPerPageTomorrow;\n  const indexOfFirstTodoTomorrow =\n    indexOfLastTodoTomorrow - todosPerPageTomorrow;\n  const currentTodosTomorrow = todosTomorrow.slice(\n    indexOfFirstTodoTomorrow,\n    indexOfLastTodoTomorrow\n  );\n\n  // Paginate todos for Todos by Category\n  const [currentPageCategory, setCurrentPageCategory] = useState({});\n  const todosPerPageCategory = 3;\n\n  const currentTodosByCategory = Object.keys(todosByCategory).reduce(\n    (acc, category) => {\n      const currentPage = currentPageCategory[category] || 1;\n      const indexOfLastTodoCategory = currentPage * todosPerPageCategory;\n      const indexOfFirstTodoCategory =\n        indexOfLastTodoCategory - todosPerPageCategory;\n      acc[category] = todosByCategory[category].slice(\n        indexOfFirstTodoCategory,\n        indexOfLastTodoCategory\n      );\n      return acc;\n    },\n    {}\n  );\n\n  // Change page for Today's Todos\n  const paginateToday = (pageNumber) => setCurrentPageToday(pageNumber);\n\n  // Change page for Tomorrow's Todos\n  const paginateTomorrow = (pageNumber) => setCurrentPageTomorrow(pageNumber);\n\n  // Change page for Todos by Category\n  const paginateCategory = (pageNumber, category) => {\n    setCurrentPageCategory((prevState) => ({\n      ...prevState,\n      [category]: pageNumber,\n    }));\n  };\n  return (\n    <div style={{ backgroundColor: \"transparent\", color:\"textColor1\"}}>\n      <div className=\"todos\">\n        <div>\n          <h2>Today's Todos</h2>\n          {currentTodosToday.map((todo, index) => (\n            <TodoCard\n              key={index}\n              todo={todo}\n              update={update}\n              handleonclickp={handleonclickp}\n              handleondelete={handleondelete}\n              parteditonclick={parteditonclick}\n            />\n          ))}\n          <ul className=\"pagination\">\n            {Array.from({\n              length: Math.ceil(todosToday.length / todosPerPageToday),\n            }).map((_, index) => (\n              <li\n                key={index}\n                className={`page-item ${\n                  currentPageToday === index + 1 ? \"active\" : \"\"\n                }`}\n              >\n                <button\n                  className=\"page-link\"\n                  onClick={() => paginateToday(index + 1)}\n                >\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h2>Tomorrow's Todos</h2>\n          {currentTodosTomorrow.map((todo, index) => (\n            <TodoCard\n              key={index}\n              todo={todo}\n              update={update}\n              handleonclickp={handleonclickp}\n              handleondelete={handleondelete}\n              parteditonclick={parteditonclick}\n            />\n          ))}\n          <ul className=\"pagination\">\n            {Array.from({\n              length: Math.ceil(todosTomorrow.length / todosPerPageTomorrow),\n            }).map((_, index) => (\n              <li\n                key={index}\n                className={`page-item ${\n                  currentPageTomorrow === index + 1 ? \"active\" : \"\"\n                }`}\n              >\n                <button\n                  className=\"page-link\"\n                  onClick={() => paginateTomorrow(index + 1)}\n                >\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      \n      <h2>Todos by Category</h2>\n      <div>\n          {Object.entries(currentTodosByCategory).map(([category, todos]) => (\n            <div key={category}>\n              <h3>{category}</h3>\n              <div>\n                {todos.map((todo, index) => (\n                  <TodoCard\n                    key={index}\n                    todo={todo}\n                    update={update}\n                    handleonclickp={handleonclickp}\n                    handleondelete={handleondelete}\n                    parteditonclick={parteditonclick}\n                  />\n                ))}\n              </div>\n              <ul className=\"pagination\">\n                {Array.from({\n                  length: Math.ceil(\n                    todosByCategory[category].length / todosPerPageCategory\n                  ),\n                }).map((_, index) => (\n                  <li\n                    key={index}\n                    className={`page-item ${\n                      currentPageCategory[category] === index + 1\n                        ? \"active\"\n                        : \"\"\n                    }`}\n                  >\n                    <button\n                      className=\"page-link\"\n                      onClick={() => paginateCategory(index + 1, category)}\n                    >\n                      {index + 1}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,KAAK;EACLC,cAAc;EACdC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA;EACA;EACC,MAAMC,UAAU,GAAG,OAAO;EAC3B;;EAEA,MAAMC,MAAM,GAAG,SAAAA,CAAUC,IAAI,EAAE;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,aAAa,GAAGR,KAAK,CAACS,SAAS,CAAEC,GAAG,IAAK;MAC7C,OAAOA,GAAG,CAACC,GAAG,KAAKJ,IAAI,CAACI,GAAG;IAC7B,CAAC,CAAC;IACF,IAAIH,aAAa,KAAK,CAAC,CAAC,EAAE;MACxB;MACA,MAAMI,eAAe,GAAG,CAAC,GAAGZ,KAAK,CAAC,CAAC,CAAC;MACpCY,eAAe,CAACJ,aAAa,CAAC,GAAG;QAC/B,GAAGI,eAAe,CAACJ,aAAa,CAAC;QAAE;QACnC,GAAGD,IAAI,CAAE;MACX,CAAC;;MAED;;MAEA;IACF;EACF,CAAC;;EAED;EACA,MAAMM,eAAe,GAAGb,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAER,IAAI,KAAK;IAClD,IAAIS,QAAQ;IACZ,IAAI,CAACT,IAAI,CAACS,QAAQ,EAAE;MAClBA,QAAQ,GAAG,QAAQ;MACnB,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,EAAE;QAClBD,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE;MACpB;IACF,CAAC,MAAM,IAAI,CAACA,GAAG,CAACR,IAAI,CAACS,QAAQ,CAAC,EAAE;MAC9BD,GAAG,CAACR,IAAI,CAACS,QAAQ,CAAC,GAAG,EAAE;IACzB;IACAA,QAAQ,GAAGD,GAAG,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACV,IAAI,CAAC,GAAGQ,GAAG,CAACR,IAAI,CAACS,QAAQ,CAAC,CAACC,IAAI,CAACV,IAAI,CAAC;IACnE,OAAOQ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN;EACA,MAAMG,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAAC,CAAC;EAC3BC,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;EAExC;EACA,MAAMC,UAAU,GAAGvB,KAAK,CAACwB,MAAM,CAAEjB,IAAI,IAAK;IACxC,MAAMkB,OAAO,GAAG,IAAIN,IAAI,CAACZ,IAAI,CAACmB,QAAQ,CAAC;IACvC,OAAOD,OAAO,CAACE,YAAY,CAAC,CAAC,KAAKT,KAAK,CAACS,YAAY,CAAC,CAAC;EACxD,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG5B,KAAK,CAACwB,MAAM,CAAEjB,IAAI,IAAK;IAC3C,MAAMkB,OAAO,GAAG,IAAIN,IAAI,CAACZ,IAAI,CAACmB,QAAQ,CAAC;IACvC,OAAOD,OAAO,CAACE,YAAY,CAAC,CAAC,KAAKP,QAAQ,CAACO,YAAY,CAAC,CAAC;EAC3D,CAAC,CAAC;;EAEF;EACA,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAMoC,iBAAiB,GAAG,CAAC;EAE3B,MAAMC,oBAAoB,GAAGH,gBAAgB,GAAGE,iBAAiB;EACjE,MAAME,qBAAqB,GAAGD,oBAAoB,GAAGD,iBAAiB;EACtE,MAAMG,iBAAiB,GAAGX,UAAU,CAACY,KAAK,CACxCF,qBAAqB,EACrBD,oBACF,CAAC;;EAED;EACA,MAAM,CAACI,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM2C,oBAAoB,GAAG,CAAC;EAE9B,MAAMC,uBAAuB,GAAGH,mBAAmB,GAAGE,oBAAoB;EAC1E,MAAME,wBAAwB,GAC5BD,uBAAuB,GAAGD,oBAAoB;EAChD,MAAMG,oBAAoB,GAAGb,aAAa,CAACO,KAAK,CAC9CK,wBAAwB,EACxBD,uBACF,CAAC;;EAED;EACA,MAAM,CAACG,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAMiD,oBAAoB,GAAG,CAAC;EAE9B,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,IAAI,CAAClC,eAAe,CAAC,CAACC,MAAM,CAChE,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACjB,MAAMgC,WAAW,GAAGN,mBAAmB,CAAC1B,QAAQ,CAAC,IAAI,CAAC;IACtD,MAAMiC,uBAAuB,GAAGD,WAAW,GAAGJ,oBAAoB;IAClE,MAAMM,wBAAwB,GAC5BD,uBAAuB,GAAGL,oBAAoB;IAChD7B,GAAG,CAACC,QAAQ,CAAC,GAAGH,eAAe,CAACG,QAAQ,CAAC,CAACmB,KAAK,CAC7Ce,wBAAwB,EACxBD,uBACF,CAAC;IACD,OAAOlC,GAAG;EACZ,CAAC,EACD,CAAC,CACH,CAAC;;EAED;EACA,MAAMoC,aAAa,GAAIC,UAAU,IAAKtB,mBAAmB,CAACsB,UAAU,CAAC;;EAErE;EACA,MAAMC,gBAAgB,GAAID,UAAU,IAAKf,sBAAsB,CAACe,UAAU,CAAC;;EAE3E;EACA,MAAME,gBAAgB,GAAGA,CAACF,UAAU,EAAEpC,QAAQ,KAAK;IACjD2B,sBAAsB,CAAEY,SAAS,KAAM;MACrC,GAAGA,SAAS;MACZ,CAACvC,QAAQ,GAAGoC;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EACD,oBACEtD,OAAA;IAAK0D,KAAK,EAAE;MAAEC,eAAe,EAAE,aAAa;MAAEC,KAAK,EAAC;IAAY,CAAE;IAAAC,QAAA,eAChE7D,OAAA;MAAK8D,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACpB7D,OAAA;QAAA6D,QAAA,gBACE7D,OAAA;UAAA6D,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrB9B,iBAAiB,CAAC+B,GAAG,CAAC,CAAC1D,IAAI,EAAE2D,KAAK,kBACjCpE,OAAA,CAACF,QAAQ;UAEPW,IAAI,EAAEA,IAAK;UACXD,MAAM,EAAEA,MAAO;UACfL,cAAc,EAAEA,cAAe;UAC/BC,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEA;QAAgB,GAL5B+D,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACF,CAAC,eACFlE,OAAA;UAAI8D,SAAS,EAAC,YAAY;UAAAD,QAAA,EACvBQ,KAAK,CAACC,IAAI,CAAC;YACVC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAAChD,UAAU,CAAC8C,MAAM,GAAGtC,iBAAiB;UACzD,CAAC,CAAC,CAACkC,GAAG,CAAC,CAACO,CAAC,EAAEN,KAAK,kBACdpE,OAAA;YAEE8D,SAAS,EAAG,aACV/B,gBAAgB,KAAKqC,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAC7C,EAAE;YAAAP,QAAA,eAEH7D,OAAA;cACE8D,SAAS,EAAC,WAAW;cACrBa,OAAO,EAAEA,CAAA,KAAMtB,aAAa,CAACe,KAAK,GAAG,CAAC,CAAE;cAAAP,QAAA,EAEvCO,KAAK,GAAG;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC,GAVJE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWR,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNlE,OAAA;QAAA6D,QAAA,gBACE7D,OAAA;UAAA6D,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBvB,oBAAoB,CAACwB,GAAG,CAAC,CAAC1D,IAAI,EAAE2D,KAAK,kBACpCpE,OAAA,CAACF,QAAQ;UAEPW,IAAI,EAAEA,IAAK;UACXD,MAAM,EAAEA,MAAO;UACfL,cAAc,EAAEA,cAAe;UAC/BC,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEA;QAAgB,GAL5B+D,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACF,CAAC,eACFlE,OAAA;UAAI8D,SAAS,EAAC,YAAY;UAAAD,QAAA,EACvBQ,KAAK,CAACC,IAAI,CAAC;YACVC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAAC3C,aAAa,CAACyC,MAAM,GAAG/B,oBAAoB;UAC/D,CAAC,CAAC,CAAC2B,GAAG,CAAC,CAACO,CAAC,EAAEN,KAAK,kBACdpE,OAAA;YAEE8D,SAAS,EAAG,aACVxB,mBAAmB,KAAK8B,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAChD,EAAE;YAAAP,QAAA,eAEH7D,OAAA;cACE8D,SAAS,EAAC,WAAW;cACrBa,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACa,KAAK,GAAG,CAAC,CAAE;cAAAP,QAAA,EAE1CO,KAAK,GAAG;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC,GAVJE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWR,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAERlE,OAAA;QAAA6D,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlE,OAAA;QAAA6D,QAAA,EACKb,MAAM,CAAC4B,OAAO,CAAC7B,sBAAsB,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACjD,QAAQ,EAAEhB,KAAK,CAAC,kBAC5DF,OAAA;UAAA6D,QAAA,gBACE7D,OAAA;YAAA6D,QAAA,EAAK3C;UAAQ;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBlE,OAAA;YAAA6D,QAAA,EACG3D,KAAK,CAACiE,GAAG,CAAC,CAAC1D,IAAI,EAAE2D,KAAK,kBACrBpE,OAAA,CAACF,QAAQ;cAEPW,IAAI,EAAEA,IAAK;cACXD,MAAM,EAAEA,MAAO;cACfL,cAAc,EAAEA,cAAe;cAC/BC,cAAc,EAAEA,cAAe;cAC/BC,eAAe,EAAEA;YAAgB,GAL5B+D,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMX,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNlE,OAAA;YAAI8D,SAAS,EAAC,YAAY;YAAAD,QAAA,EACvBQ,KAAK,CAACC,IAAI,CAAC;cACVC,MAAM,EAAEC,IAAI,CAACC,IAAI,CACf1D,eAAe,CAACG,QAAQ,CAAC,CAACqD,MAAM,GAAGzB,oBACrC;YACF,CAAC,CAAC,CAACqB,GAAG,CAAC,CAACO,CAAC,EAAEN,KAAK,kBACdpE,OAAA;cAEE8D,SAAS,EAAG,aACVlB,mBAAmB,CAAC1B,QAAQ,CAAC,KAAKkD,KAAK,GAAG,CAAC,GACvC,QAAQ,GACR,EACL,EAAE;cAAAP,QAAA,eAEH7D,OAAA;gBACE8D,SAAS,EAAC,WAAW;gBACrBa,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACY,KAAK,GAAG,CAAC,EAAElD,QAAQ,CAAE;gBAAA2C,QAAA,EAEpDO,KAAK,GAAG;cAAC;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC,GAZJE,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaR,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GApCGhD,QAAQ;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqCb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5D,EAAA,CA/OIL,QAAQ;AAAA4E,EAAA,GAAR5E,QAAQ;AAiPd,eAAeA,QAAQ;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}