{"ast":null,"code":"var _jsxFileName = \"/Users/bipinchaudhary/Projects/todolistApp/last todo list/Todo/TodoUsingReact/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./Components/Home/home\";\nimport LoginForm from \"./Components/userlogin\";\nimport SignupForm from \"./Components/usersign\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [name, setname] = useState();\n\n  // Function to handle user login\n  const handleSigin = async requestBody => {\n    // Perform login logic here\n    //setIsLoggedIn(true);\n    const temp = {\n      name: requestBody.name,\n      email: requestBody.email,\n      password: requestBody.password\n    };\n    const result = await fetch(\"http://localhost:3001/signup\", {\n      method: \"POST\",\n      // Specify the HTTP method (GET, POST, PUT, DELETE, etc.)\n      headers: {\n        \"Content-Type\": \"application/json\" // Specify the content type\n        // username: \"test@gmail.com\", // Your custom header (e.g., Authorization)\n        // password: \"12345\",\n        // Add more headers if needed\n      },\n      body: JSON.stringify(temp)\n    });\n    const result_json = await result.json();\n    console.log(result_json);\n    setIsSignUp(false); // Reset isSignUp state after successful login\n  };\n  const handleLogin = async (email, password) => {\n    // Perform login logic here\n    // console.log(\"login\", email, password);\n    const result = await fetch(\"http://localhost:3001/signin\", {\n      method: \"POST\",\n      // Specify the HTTP method (GET, POST, PUT, DELETE, etc.)\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Specify the content type\n        username: email,\n        // Your custom header (e.g., Authorization)\n        password: password\n        // Add more headers if needed\n      }\n    });\n    const result_json = await result.json();\n    if (result.status === 404) {\n      alert(result_json.msg);\n      return;\n    }\n    // console.log(result_json);\n    setname(result_json.name);\n    localStorage.setItem(\"token\", result_json.token);\n    setIsLoggedIn(true);\n    //setIsSignUp(false); // Reset isSignUp state after successful login\n  };\n\n  // Function to handle user logout\n  const handleLogout = () => {\n    // Perform logout logic here\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  };\n\n  // Function to handle sign-up link click\n  const handleSignupClick = () => {\n    setIsSignUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P9k+DAnLVynOKEsJUVfeXn4g968=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","LoginForm","SignupForm","useState","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","isSignUp","setIsSignUp","name","setname","handleSigin","requestBody","temp","email","password","result","fetch","method","headers","body","JSON","stringify","result_json","json","console","log","handleLogin","username","status","alert","msg","localStorage","setItem","token","handleLogout","removeItem","handleSignupClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bipinchaudhary/Projects/todolistApp/last todo list/Todo/TodoUsingReact/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Home from \"./Components/Home/home\";\nimport LoginForm from \"./Components/userlogin\";\nimport SignupForm from \"./Components/usersign\";\nimport { useState } from \"react\";\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [name, setname] = useState();\n\n  // Function to handle user login\n  const handleSigin = async (requestBody) => {\n    // Perform login logic here\n    //setIsLoggedIn(true);\n    const temp = {\n      name: requestBody.name,\n      email: requestBody.email,\n      password: requestBody.password,\n    };\n    const result = await fetch(\"http://localhost:3001/signup\", {\n      method: \"POST\", // Specify the HTTP method (GET, POST, PUT, DELETE, etc.)\n      headers: {\n        \"Content-Type\": \"application/json\", // Specify the content type\n        // username: \"test@gmail.com\", // Your custom header (e.g., Authorization)\n        // password: \"12345\",\n        // Add more headers if needed\n      },\n      body: JSON.stringify(temp),\n    });\n    const result_json = await result.json();\n    console.log(result_json);\n    setIsSignUp(false); // Reset isSignUp state after successful login\n  };\n  const handleLogin = async (email, password) => {\n    // Perform login logic here\n    // console.log(\"login\", email, password);\n    const result = await fetch(\"http://localhost:3001/signin\", {\n      method: \"POST\", // Specify the HTTP method (GET, POST, PUT, DELETE, etc.)\n      headers: {\n        \"Content-Type\": \"application/json\", // Specify the content type\n        username: email, // Your custom header (e.g., Authorization)\n        password: password,\n        // Add more headers if needed\n      },\n    });\n    const result_json = await result.json();\n    if (result.status === 404) {\n      alert(result_json.msg);\n      return;\n    }\n    // console.log(result_json);\n    setname(result_json.name);\n    localStorage.setItem(\"token\", result_json.token);\n    setIsLoggedIn(true);\n    //setIsSignUp(false); // Reset isSignUp state after successful login\n  };\n\n  // Function to handle user logout\n  const handleLogout = () => {\n    // Perform logout logic here\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  };\n\n  // Function to handle sign-up link click\n  const handleSignupClick = () => {\n    setIsSignUp(true);\n  };\n  return (\n    <div className=\"container\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAE7C,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;;EAElC;EACA,MAAMW,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC;IACA;IACA,MAAMC,IAAI,GAAG;MACXJ,IAAI,EAAEG,WAAW,CAACH,IAAI;MACtBK,KAAK,EAAEF,WAAW,CAACE,KAAK;MACxBC,QAAQ,EAAEH,WAAW,CAACG;IACxB,CAAC;IACD,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB,CAAE;QACpC;QACA;QACA;MACF,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMU,WAAW,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxBf,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EACD,MAAMmB,WAAW,GAAG,MAAAA,CAAOb,KAAK,EAAEC,QAAQ,KAAK;IAC7C;IACA;IACA,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAE;QACpCS,QAAQ,EAAEd,KAAK;QAAE;QACjBC,QAAQ,EAAEA;QACV;MACF;IACF,CAAC,CAAC;IACF,MAAMQ,WAAW,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,CAAC;IACvC,IAAIR,MAAM,CAACa,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAACP,WAAW,CAACQ,GAAG,CAAC;MACtB;IACF;IACA;IACArB,OAAO,CAACa,WAAW,CAACd,IAAI,CAAC;IACzBuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,WAAW,CAACW,KAAK,CAAC;IAChD5B,aAAa,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChC9B,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAM+B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B7B,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,oBACEN,OAAA;IAAKoC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBrC,OAAA,CAACL,IAAI;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvC,EAAA,CApEQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}